package weka.api;

//WEKA LIBRARIES
import weka.core.Instances;
import weka.core.converters.ArffSaver;
import weka.core.converters.CSVLoader;

//JAVA LIBRARIES
import java.io.File;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;



public class LoadSaveData 
{	
	private Instances dataset; //Conjunto de datos cargados
	
	
	/**
	 * Abre un archivo ARFF
	 * @param path	Ruta donde se encuentra el archivo
	 * @return	Un objeto de la clase Instances
	 */
	public Instances openARFF(String path)
	{
		try
		{
			this.dataset = new Instances(new BufferedReader(new FileReader(path)));
		}
		catch(IOException ex)
		{
			System.out.println(ex);
		}
		return this.dataset;
	}
	
	/**
	 * Abre un archivo CSV
	 * @param path. Ruta donde se encuentra el archivo
	 * @return Un objeto de la clase Instances
	 */
	public Instances openCSV(String path)
	{
		try
		{
			CSVLoader loader = new CSVLoader();
			loader.setSource(new File(path));
			dataset = loader.getDataSet();
			dataset.setClassIndex(dataset.numAttributes()-1);
		}
		catch(IOException ex)
		{
			System.out.println(ex);
		}
		
		return this.dataset;
	}
	
	/**
	 * Guarda un objeto de la clase Instances como archivo ARFF
	 * @param dest	Dirección de destino del archivo
	 */
	public void toArff(String dest,Instances dataset)
	{
		try
		{
			ArffSaver saver = new ArffSaver();
			saver.setInstances(dataset);
			saver.setFile(new File(dest));
			saver.writeBatch();
		}
		catch(IOException ex)
		{
			System.out.println(ex);
		}
	}
	
	/**
	 * Convierte un archivo CSV a ARFF
	 * @param path	Dirección donde se encuentra el archivo CSV
	 * @param dest	Dirección donde se guardara el nuevo archivo
	 */
	public void csvToArff(String path, String dest)
	{
		try
		{
			ArffSaver saver = new ArffSaver();
			saver.setInstances(this.openCSV(path));
			saver.setFile(new File(dest));
			saver.writeBatch();
		}
		catch(IOException ex)
		{
			System.out.println(ex);
		}
	}
	
	public ArrayList<String> getNames()
	{
		ArrayList<String> names = new ArrayList<String>();
		int numAttr = dataset.numAttributes();
		for(int i=0; i<numAttr; i++)
		{
			names.add(dataset.attribute(i).name());
		}
		return names;
	}
}
